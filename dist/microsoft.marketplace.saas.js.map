{"version":3,"file":"microsoft.marketplace.saas.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/@azure/core-asynciterator-polyfill/dist-esm/index.js","../node_modules/@azure/core-paging/dist-esm/src/index.js","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/fulfillmentOperations.ts","../src/operations/subscriptionOperations.ts","../src/operations/index.ts","../src/saaSAPIContext.ts","../src/saaSAPI.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","\"use strict\";\nif (typeof Symbol === undefined || !Symbol.asyncIterator) {\n    Symbol.asyncIterator = Symbol.for(\"Symbol.asyncIterator\");\n}\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport \"@azure/core-asynciterator-polyfill\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const ResolvedSubscription: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResolvedSubscription\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      subscriptionName: {\n        serializedName: \"subscriptionName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      offerId: {\n        serializedName: \"offerId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      planId: {\n        serializedName: \"planId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      subscription: {\n        serializedName: \"subscription\",\n        type: {\n          name: \"Composite\",\n          className: \"Subscription\"\n        }\n      }\n    }\n  }\n};\n\nexport const Subscription: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Subscription\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      publisherId: {\n        serializedName: \"publisherId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      offerId: {\n        serializedName: \"offerId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      saasSubscriptionStatus: {\n        serializedName: \"saasSubscriptionStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"NotStarted\",\n            \"PendingFulfillmentStart\",\n            \"Subscribed\",\n            \"Suspended\",\n            \"Unsubscribed\"\n          ]\n        }\n      },\n      beneficiary: {\n        serializedName: \"beneficiary\",\n        type: {\n          name: \"Composite\",\n          className: \"AadIdentifier\"\n        }\n      },\n      purchaser: {\n        serializedName: \"purchaser\",\n        type: {\n          name: \"Composite\",\n          className: \"AadIdentifier\"\n        }\n      },\n      planId: {\n        serializedName: \"planId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      term: {\n        serializedName: \"term\",\n        type: {\n          name: \"Composite\",\n          className: \"SubscriptionTerm\"\n        }\n      },\n      autoRenew: {\n        serializedName: \"autoRenew\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isTest: {\n        serializedName: \"isTest\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isFreeTrial: {\n        serializedName: \"isFreeTrial\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      allowedCustomerOperations: {\n        serializedName: \"allowedCustomerOperations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Enum\",\n              allowedValues: [\"Read\", \"Update\", \"Delete\"]\n            }\n          }\n        }\n      },\n      sessionId: {\n        serializedName: \"sessionId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      fulfillmentId: {\n        serializedName: \"fulfillmentId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      storeFront: {\n        serializedName: \"storeFront\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sandboxType: {\n        serializedName: \"sandboxType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"Csp\"]\n        }\n      },\n      created: {\n        serializedName: \"created\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sessionMode: {\n        serializedName: \"sessionMode\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"DryRun\"]\n        }\n      }\n    }\n  }\n};\n\nexport const AadIdentifier: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AadIdentifier\",\n    modelProperties: {\n      emailId: {\n        serializedName: \"emailId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      objectId: {\n        serializedName: \"objectId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      puid: {\n        serializedName: \"puid\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionTerm: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionTerm\",\n    modelProperties: {\n      startDate: {\n        serializedName: \"startDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endDate: {\n        serializedName: \"endDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionsResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionsResponse\",\n    modelProperties: {\n      subscriptions: {\n        serializedName: \"subscriptions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Subscription\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"@nextLink\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriberPlan: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriberPlan\",\n    modelProperties: {\n      planId: {\n        serializedName: \"planId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionPlans: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionPlans\",\n    modelProperties: {\n      plans: {\n        serializedName: \"plans\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Plan\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Plan: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Plan\",\n    modelProperties: {\n      planId: {\n        serializedName: \"planId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isPrivate: {\n        serializedName: \"isPrivate\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hasFreeTrials: {\n        serializedName: \"hasFreeTrials\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isPricePerSeat: {\n        serializedName: \"isPricePerSeat\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isStopSell: {\n        serializedName: \"isStopSell\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      market: {\n        serializedName: \"market\",\n        type: {\n          name: \"String\"\n        }\n      },\n      planComponents: {\n        serializedName: \"planComponents\",\n        type: {\n          name: \"Composite\",\n          className: \"PlanComponents\"\n        }\n      }\n    }\n  }\n};\n\nexport const PlanComponents: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PlanComponents\",\n    modelProperties: {\n      recurrentBillingTerms: {\n        serializedName: \"recurrentBillingTerms\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RecurrentBillingTerm\"\n            }\n          }\n        }\n      },\n      meteringDimensions: {\n        serializedName: \"meteringDimensions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MeteringDimension\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RecurrentBillingTerm: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecurrentBillingTerm\",\n    modelProperties: {\n      currency: {\n        serializedName: \"currency\",\n        type: {\n          name: \"String\"\n        }\n      },\n      price: {\n        serializedName: \"price\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      termUnit: {\n        serializedName: \"termUnit\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"P1M\", \"P1Y\", \"P2Y\", \"P3Y\"]\n        }\n      },\n      termDescription: {\n        serializedName: \"termDescription\",\n        type: {\n          name: \"String\"\n        }\n      },\n      meteredQuantityIncluded: {\n        serializedName: \"meteredQuantityIncluded\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MeteringedQuantityIncluded\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MeteringedQuantityIncluded: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MeteringedQuantityIncluded\",\n    modelProperties: {\n      dimensionId: {\n        serializedName: \"dimensionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      units: {\n        serializedName: \"units\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MeteringDimension: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MeteringDimension\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currency: {\n        serializedName: \"currency\",\n        type: {\n          name: \"String\"\n        }\n      },\n      pricePerUnit: {\n        serializedName: \"pricePerUnit\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      unitOfMeasure: {\n        serializedName: \"unitOfMeasure\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationList: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationList\",\n    modelProperties: {\n      operations: {\n        serializedName: \"operations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      activityId: {\n        serializedName: \"activityId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      offerId: {\n        serializedName: \"offerId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publisherId: {\n        serializedName: \"publisherId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      planId: {\n        serializedName: \"planId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      action: {\n        serializedName: \"action\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Unsubscribe\",\n            \"ChangePlan\",\n            \"ChangeQuantity\",\n            \"Suspend\",\n            \"Reinstate\"\n          ]\n        }\n      },\n      timeStamp: {\n        serializedName: \"timeStamp\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"NotStarted\",\n            \"InProgress\",\n            \"Succeeded\",\n            \"Failed\",\n            \"Conflict\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateOperation: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateOperation\",\n    modelProperties: {\n      planId: {\n        serializedName: \"planId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quantity: {\n        serializedName: \"quantity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Success\", \"Failure\"]\n        }\n      }\n    }\n  }\n};\n\nexport const FulfillmentInternalServerErrorResponse: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FulfillmentInternalServerErrorResponse\",\n    modelProperties: {\n      error: {\n        serializedName: \"error\",\n        type: {\n          name: \"Composite\",\n          className: \"FulfillmentInternalServerErrorResponseError\"\n        }\n      }\n    }\n  }\n};\n\nexport const FulfillmentInternalServerErrorResponseError: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FulfillmentInternalServerErrorResponseError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FulfillmentOperationsUpdateSubscriptionHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FulfillmentOperationsUpdateSubscriptionHeaders\",\n    modelProperties: {\n      operationLocationUri: {\n        serializedName: \"operation-location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FulfillmentOperationsDeleteSubscriptionHeaders: coreHttp.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FulfillmentOperationsDeleteSubscriptionHeaders\",\n    modelProperties: {\n      operationLocationUri: {\n        serializedName: \"operation-location\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-http\";\nimport {\n  SubscriberPlan as SubscriberPlanMapper,\n  UpdateOperation as UpdateOperationMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2018-08-31\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const requestId: OperationParameter = {\n  parameterPath: [\"options\", \"requestId\"],\n  mapper: {\n    serializedName: \"x-ms-requestid\",\n    type: {\n      name: \"Uuid\"\n    }\n  }\n};\n\nexport const correlationId: OperationParameter = {\n  parameterPath: [\"options\", \"correlationId\"],\n  mapper: {\n    serializedName: \"x-ms-correlationid\",\n    type: {\n      name: \"Uuid\"\n    }\n  }\n};\n\nexport const xMsMarketplaceToken: OperationParameter = {\n  parameterPath: \"xMsMarketplaceToken\",\n  mapper: {\n    serializedName: \"x-ms-marketplace-token\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const continuationToken: OperationQueryParameter = {\n  parameterPath: [\"options\", \"continuationToken\"],\n  mapper: {\n    serializedName: \"continuationToken\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"Uuid\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: SubscriberPlanMapper\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const operationId: OperationURLParameter = {\n  parameterPath: \"operationId\",\n  mapper: {\n    serializedName: \"operationId\",\n    required: true,\n    type: {\n      name: \"Uuid\"\n    }\n  }\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: \"body\",\n  mapper: UpdateOperationMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport \"@azure/core-paging\";\nimport { PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SaaSAPIContext } from \"../saaSAPIContext\";\nimport {\n  Subscription,\n  FulfillmentOperationsListSubscriptionsNextOptionalParams,\n  FulfillmentOperationsListSubscriptionsOptionalParams,\n  FulfillmentOperationsResolveOptionalParams,\n  FulfillmentOperationsResolveResponse,\n  FulfillmentOperationsListSubscriptionsResponse,\n  FulfillmentOperationsGetSubscriptionOptionalParams,\n  FulfillmentOperationsGetSubscriptionResponse,\n  SubscriberPlan,\n  FulfillmentOperationsUpdateSubscriptionOptionalParams,\n  FulfillmentOperationsUpdateSubscriptionResponse,\n  FulfillmentOperationsDeleteSubscriptionOptionalParams,\n  FulfillmentOperationsDeleteSubscriptionResponse,\n  FulfillmentOperationsListAvailablePlansOptionalParams,\n  FulfillmentOperationsListAvailablePlansResponse,\n  FulfillmentOperationsActivateSubscriptionOptionalParams,\n  FulfillmentOperationsListSubscriptionsNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class representing a FulfillmentOperations. */\nexport class FulfillmentOperations {\n  private readonly client: SaaSAPIContext;\n\n  /**\n   * Initialize a new instance of the class FulfillmentOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SaaSAPIContext) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all the SaaS subscriptions for a publisher.\n   * @param options The options parameters.\n   */\n  public listSubscriptions(\n    options?: FulfillmentOperationsListSubscriptionsOptionalParams\n  ): PagedAsyncIterableIterator<Subscription> {\n    const iter = this.listSubscriptionsPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: () => {\n        return this.listSubscriptionsPagingPage(options);\n      }\n    };\n  }\n\n  private async *listSubscriptionsPagingPage(\n    options?: FulfillmentOperationsListSubscriptionsOptionalParams\n  ): AsyncIterableIterator<Subscription[]> {\n    let result = await this._listSubscriptions(options);\n    yield result.subscriptions || [];\n    let continuationToken = result.nextLink;\n    while (continuationToken) {\n      result = await this._listSubscriptionsNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      yield result.subscriptions || [];\n    }\n  }\n\n  private async *listSubscriptionsPagingAll(\n    options?: FulfillmentOperationsListSubscriptionsOptionalParams\n  ): AsyncIterableIterator<Subscription> {\n    for await (const page of this.listSubscriptionsPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * The resolve endpoint enables the publisher to resolve a marketplace token to a persistent resource\n   * ID. The resource ID is the unique identifier for a SaaS subscription. When a user is redirected to a\n   * partner's website, the URL contains a token in the query parameters. The partner is expected to use\n   * this token and make a request to resolve it. The response contains the unique SaaS subscription ID,\n   * name, offer ID, and plan for the resource. This token is valid for one hour only.\n   * @param xMsMarketplaceToken The token query parameter in the URL when the user is redirected to the\n   *                            SaaS partner's website from Azure (for example,  https://contoso.com/signup?token=..). Note, The URL\n   *                            decodes the token value from the browser before using it.\n   * @param options The options parameters.\n   */\n  resolve(\n    xMsMarketplaceToken: string,\n    options?: FulfillmentOperationsResolveOptionalParams\n  ): Promise<FulfillmentOperationsResolveResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      xMsMarketplaceToken,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      resolveOperationSpec\n    ) as Promise<FulfillmentOperationsResolveResponse>;\n  }\n\n  /**\n   * Lists all the SaaS subscriptions for a publisher.\n   * @param options The options parameters.\n   */\n  private _listSubscriptions(\n    options?: FulfillmentOperationsListSubscriptionsOptionalParams\n  ): Promise<FulfillmentOperationsListSubscriptionsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listSubscriptionsOperationSpec\n    ) as Promise<FulfillmentOperationsListSubscriptionsResponse>;\n  }\n\n  /**\n   * Gets the specified SaaS subscription. Use this call to get license information and plan information.\n   * @param subscriptionId\n   * @param options The options parameters.\n   */\n  getSubscription(\n    subscriptionId: string,\n    options?: FulfillmentOperationsGetSubscriptionOptionalParams\n  ): Promise<FulfillmentOperationsGetSubscriptionResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      subscriptionId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getSubscriptionOperationSpec\n    ) as Promise<FulfillmentOperationsGetSubscriptionResponse>;\n  }\n\n  /**\n   * Use this call to update the plan, the user count (quantity), or both.\n   * @param subscriptionId\n   * @param body\n   * @param options The options parameters.\n   */\n  updateSubscription(\n    subscriptionId: string,\n    body: SubscriberPlan,\n    options?: FulfillmentOperationsUpdateSubscriptionOptionalParams\n  ): Promise<FulfillmentOperationsUpdateSubscriptionResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      subscriptionId,\n      body,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      updateSubscriptionOperationSpec\n    ) as Promise<FulfillmentOperationsUpdateSubscriptionResponse>;\n  }\n\n  /**\n   * Unsubscribe and delete the specified subscription.\n   * @param subscriptionId\n   * @param options The options parameters.\n   */\n  deleteSubscription(\n    subscriptionId: string,\n    options?: FulfillmentOperationsDeleteSubscriptionOptionalParams\n  ): Promise<FulfillmentOperationsDeleteSubscriptionResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      subscriptionId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      deleteSubscriptionOperationSpec\n    ) as Promise<FulfillmentOperationsDeleteSubscriptionResponse>;\n  }\n\n  /**\n   * Use this call to find out if there are any private or public offers for the current publisher.\n   * @param subscriptionId\n   * @param options The options parameters.\n   */\n  listAvailablePlans(\n    subscriptionId: string,\n    options?: FulfillmentOperationsListAvailablePlansOptionalParams\n  ): Promise<FulfillmentOperationsListAvailablePlansResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      subscriptionId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listAvailablePlansOperationSpec\n    ) as Promise<FulfillmentOperationsListAvailablePlansResponse>;\n  }\n\n  /**\n   * Use this call to activate a subscription.\n   * @param subscriptionId\n   * @param body\n   * @param options The options parameters.\n   */\n  activateSubscription(\n    subscriptionId: string,\n    body: SubscriberPlan,\n    options?: FulfillmentOperationsActivateSubscriptionOptionalParams\n  ): Promise<coreHttp.RestResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      subscriptionId,\n      body,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      activateSubscriptionOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n\n  /**\n   * ListSubscriptionsNext\n   * @param nextLink The nextLink from the previous successful call to the ListSubscriptions method.\n   * @param options The options parameters.\n   */\n  private _listSubscriptionsNext(\n    nextLink: string,\n    options?: FulfillmentOperationsListSubscriptionsNextOptionalParams\n  ): Promise<FulfillmentOperationsListSubscriptionsNextResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      nextLink,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listSubscriptionsNextOperationSpec\n    ) as Promise<FulfillmentOperationsListSubscriptionsNextResponse>;\n  }\n}\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst resolveOperationSpec: coreHttp.OperationSpec = {\n  path: \"/saas/subscriptions/resolve\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ResolvedSubscription\n    },\n    400: {\n      isError: true\n    },\n    403: {\n      isError: true\n    },\n    404: {\n      isError: true\n    },\n    500: {\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.requestId,\n    Parameters.correlationId,\n    Parameters.xMsMarketplaceToken\n  ],\n  serializer\n};\nconst listSubscriptionsOperationSpec: coreHttp.OperationSpec = {\n  path: \"/saas/subscriptions/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SubscriptionsResponse\n    },\n    403: {\n      isError: true\n    },\n    500: {\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.continuationToken],\n  urlParameters: [Parameters.$host],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.requestId,\n    Parameters.correlationId\n  ],\n  serializer\n};\nconst getSubscriptionOperationSpec: coreHttp.OperationSpec = {\n  path: \"/saas/subscriptions/{subscriptionId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Subscription\n    },\n    403: {\n      isError: true\n    },\n    404: {\n      isError: true\n    },\n    500: {\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.requestId,\n    Parameters.correlationId\n  ],\n  serializer\n};\nconst updateSubscriptionOperationSpec: coreHttp.OperationSpec = {\n  path: \"/saas/subscriptions/{subscriptionId}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    202: {\n      headersMapper: Mappers.FulfillmentOperationsUpdateSubscriptionHeaders\n    },\n    400: {\n      isError: true\n    },\n    403: {\n      isError: true\n    },\n    404: {\n      isError: true\n    },\n    500: {\n      isError: true\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [\n    Parameters.requestId,\n    Parameters.correlationId,\n    Parameters.contentType\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteSubscriptionOperationSpec: coreHttp.OperationSpec = {\n  path: \"/saas/subscriptions/{subscriptionId}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.FulfillmentOperationsDeleteSubscriptionHeaders\n    },\n    400: {\n      isError: true\n    },\n    403: {\n      isError: true\n    },\n    404: {\n      isError: true\n    },\n    500: {\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.requestId, Parameters.correlationId],\n  serializer\n};\nconst listAvailablePlansOperationSpec: coreHttp.OperationSpec = {\n  path: \"/saas/subscriptions/{subscriptionId}/listAvailablePlans\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SubscriptionPlans\n    },\n    403: {\n      isError: true\n    },\n    404: {\n      isError: true\n    },\n    500: {\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.requestId,\n    Parameters.correlationId\n  ],\n  serializer\n};\nconst activateSubscriptionOperationSpec: coreHttp.OperationSpec = {\n  path: \"/saas/subscriptions/{subscriptionId}/activate\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {},\n    400: {\n      isError: true\n    },\n    403: {\n      isError: true\n    },\n    404: {\n      isError: true\n    },\n    500: {\n      isError: true\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [\n    Parameters.requestId,\n    Parameters.correlationId,\n    Parameters.contentType\n  ],\n  mediaType: \"json\",\n  serializer\n};\nconst listSubscriptionsNextOperationSpec: coreHttp.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SubscriptionsResponse\n    },\n    403: {\n      isError: true\n    },\n    500: {\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.continuationToken],\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.requestId,\n    Parameters.correlationId\n  ],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SaaSAPIContext } from \"../saaSAPIContext\";\nimport {\n  SubscriptionOperationsListOperationsOptionalParams,\n  SubscriptionOperationsListOperationsResponse,\n  SubscriptionOperationsGetOperationStatusOptionalParams,\n  SubscriptionOperationsGetOperationStatusResponse,\n  UpdateOperation,\n  SubscriptionOperationsUpdateOperationStatusOptionalParams\n} from \"../models\";\n\n/** Class representing a SubscriptionOperations. */\nexport class SubscriptionOperations {\n  private readonly client: SaaSAPIContext;\n\n  /**\n   * Initialize a new instance of the class SubscriptionOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SaaSAPIContext) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the outstanding operations for the current publisher.\n   * @param subscriptionId\n   * @param options The options parameters.\n   */\n  listOperations(\n    subscriptionId: string,\n    options?: SubscriptionOperationsListOperationsOptionalParams\n  ): Promise<SubscriptionOperationsListOperationsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      subscriptionId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listOperationsOperationSpec\n    ) as Promise<SubscriptionOperationsListOperationsResponse>;\n  }\n\n  /**\n   * Enables the publisher to track the status of the specified triggered async operation (such as\n   * Subscribe, Unsubscribe, ChangePlan, or ChangeQuantity).\n   * @param subscriptionId\n   * @param operationId\n   * @param options The options parameters.\n   */\n  getOperationStatus(\n    subscriptionId: string,\n    operationId: string,\n    options?: SubscriptionOperationsGetOperationStatusOptionalParams\n  ): Promise<SubscriptionOperationsGetOperationStatusResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      subscriptionId,\n      operationId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getOperationStatusOperationSpec\n    ) as Promise<SubscriptionOperationsGetOperationStatusResponse>;\n  }\n\n  /**\n   * Update the status of an operation to indicate success or failure with the provided values.\n   * @param subscriptionId\n   * @param operationId\n   * @param body\n   * @param options The options parameters.\n   */\n  updateOperationStatus(\n    subscriptionId: string,\n    operationId: string,\n    body: UpdateOperation,\n    options?: SubscriptionOperationsUpdateOperationStatusOptionalParams\n  ): Promise<coreHttp.RestResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      subscriptionId,\n      operationId,\n      body,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      updateOperationStatusOperationSpec\n    ) as Promise<coreHttp.RestResponse>;\n  }\n}\n// Operation Specifications\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst listOperationsOperationSpec: coreHttp.OperationSpec = {\n  path: \"/saas/subscriptions/{subscriptionId}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationList\n    },\n    400: {\n      isError: true\n    },\n    403: {\n      isError: true\n    },\n    404: {\n      isError: true\n    },\n    500: {\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.requestId,\n    Parameters.correlationId\n  ],\n  serializer\n};\nconst getOperationStatusOperationSpec: coreHttp.OperationSpec = {\n  path: \"/saas/subscriptions/{subscriptionId}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Operation\n    },\n    400: {\n      isError: true\n    },\n    403: {\n      isError: true\n    },\n    404: {\n      isError: true\n    },\n    500: {\n      isError: true\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.operationId\n  ],\n  headerParameters: [\n    Parameters.accept,\n    Parameters.requestId,\n    Parameters.correlationId\n  ],\n  serializer\n};\nconst updateOperationStatusOperationSpec: coreHttp.OperationSpec = {\n  path: \"/saas/subscriptions/{subscriptionId}/operations/{operationId}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {},\n    400: {\n      isError: true\n    },\n    403: {\n      isError: true\n    },\n    404: {\n      isError: true\n    },\n    409: {\n      isError: true\n    },\n    500: {\n      isError: true\n    }\n  },\n  requestBody: Parameters.body1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.operationId\n  ],\n  headerParameters: [\n    Parameters.requestId,\n    Parameters.correlationId,\n    Parameters.contentType\n  ],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport * from \"./fulfillmentOperations\";\nexport * from \"./subscriptionOperations\";\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { SaaSAPIOptionalParams } from \"./models\";\n\nconst packageName = \"microsoft.marketplace.saas\";\nconst packageVersion = \"1.0.0\";\n\nexport class SaaSAPIContext extends coreHttp.ServiceClient {\n  $host: string;\n  apiVersion: string;\n\n  /**\n   * Initializes a new instance of the SaaSAPIContext class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,\n    options?: SaaSAPIOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    if (!options.credentialScopes) {\n      options.credentialScopes = [\n        \"20e940b3-4c77-4b0b-9a53-9e16a1b010a7/.default\"\n      ];\n    }\n\n    super(credentials, options);\n\n    this.requestContentType = \"application/json; charset=utf-8\";\n\n    this.baseUri =\n      options.endpoint || \"https://marketplaceapi.microsoft.com/api\";\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://marketplaceapi.microsoft.com/api\";\n    this.apiVersion = options.apiVersion || \"2018-08-31\";\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { FulfillmentOperations, SubscriptionOperations } from \"./operations\";\nimport { SaaSAPIContext } from \"./saaSAPIContext\";\nimport { SaaSAPIOptionalParams } from \"./models\";\n\nexport class SaaSAPI extends SaaSAPIContext {\n  /**\n   * Initializes a new instance of the SaaSAPI class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreHttp.TokenCredential | coreHttp.ServiceClientCredentials,\n    options?: SaaSAPIOptionalParams\n  ) {\n    super(credentials, options);\n    this.fulfillmentOperations = new FulfillmentOperations(this);\n    this.subscriptionOperations = new SubscriptionOperations(this);\n  }\n\n  fulfillmentOperations: FulfillmentOperations;\n  subscriptionOperations: SubscriptionOperations;\n}\n"],"names":["SubscriberPlanMapper","UpdateOperationMapper","continuationToken","xMsMarketplaceToken","coreHttp.operationOptionsToRequestOptionsBase","subscriptionId","body","nextLink","coreHttp.Serializer","Mappers.ResolvedSubscription","Parameters.apiVersion","Parameters.$host","Parameters.accept","Parameters.requestId","Parameters.correlationId","Parameters.xMsMarketplaceToken","Mappers.SubscriptionsResponse","Parameters.continuationToken","Mappers.Subscription","Parameters.subscriptionId","Mappers.FulfillmentOperationsUpdateSubscriptionHeaders","Parameters.body","Parameters.contentType","Mappers.FulfillmentOperationsDeleteSubscriptionHeaders","Mappers.SubscriptionPlans","Parameters.nextLink","operationId","serializer","Mappers.OperationList","Mappers.Operation","Parameters.operationId","Parameters.body1","coreHttp.ServiceClient","coreHttp.getDefaultUserAgentValue"],"mappings":"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"}